"""uuid for problem's ID

Revision ID: b8beaff0299f
Revises: 3334d9f81b5b
Create Date: 2024-10-04 14:12:14.180378

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8beaff0299f'
down_revision: Union[str, None] = '3334d9f81b5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('problems', 'id',
               existing_type=sa.VARCHAR(),
               type_=sa.UUID(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('problems_id_seq'::regclass)"))
    op.alter_column('problems', 'created_at',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('problems', 'updated_at',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('ix_problems_id', table_name='problems')
    op.create_unique_constraint(None, 'problems', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'problems', type_='unique')
    op.create_index('ix_problems_id', 'problems', ['id'], unique=True)
    op.alter_column('problems', 'updated_at',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('problems', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('problems', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('problems_id_seq'::regclass)"))
    # ### end Alembic commands ###
